<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <meta charset="utf-8">

    <title>The HTML5 Herald</title>
    <meta name="description" content="The HTML5 Herald">
    <meta name="author" content="SitePoint">
    <script  src="https://code.jquery.com/jquery-3.0.0.min.js"   integrity="sha256-JmvOoLtYsmqlsWxa7mDSLMwa6dZ9rrIdtrrVYRnDRH0="   crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/d3/4.1.0/d3.min.js"></script>

    <style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.point {
  stroke: #000;
}

</style>
</head>

<body>
  <% include template/header.ejs %>
  <h1><a href="/index"><%= title %></a></h1>
  <p>Welcome to <%= title %></p>
  <script>

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var z = d3.scaleOrdinal(d3.schemeCategory10);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("source/data.csv", function(error, data) {
  if (error) throw error;

  // Compute the series names ("y1", "y2", etc.) from the loaded CSV.
  var seriesNames = d3.keys(data[0])
      .filter(function(d) { return d !== "x"; })
      .sort();

  // Map the data to an array of arrays of {x, y} tuples.
  var series = seriesNames.map(function(series) {
    return data.map(function(d) {
      return {x: +d.x, y: +d[series]};
    });
  });

  // Compute the scalesâ€™ domains.

var x = d3.scaleLinear()
    .range([0, width]);

var y = d3.scaleLinear()
    .range([height, 0]);


  x.domain(d3.extent(d3.merge(series), function(d) { return d.x; })).nice();
  y.domain(d3.extent(d3.merge(series), function(d) { return d.y; })).nice();

  // Add the x-axis. 
  var obj = [{"x":5,"y":100},{"x":25,"y":100},{"x":45,"y":100},{"x":65,"y":100},{"x":85,"y":100}];

  series.push(obj);
  console.log(series);

  // Add the points!
  svg.selectAll(".series")
      .data(series)
    .enter().append("g")
      .attr("class", "series")
      .style("fill", function(d, i) { return z(i); })
    .selectAll(".point")
      .data(function(d) { console.log(d);return d; })
    .enter().append("circle")
      .attr("class", "point")
      .attr("r", 4.5)
      .attr("cx", function(d) { console.log(d);return x(d.x); })
      .attr("cy", function(d) { return y(d.y); });
});

</script>
<!--- 
  <input id ="b" name="updateButton"
          type="button"
          value="Update"/>
  <div id="layout"></div>
  <script src="javascripts/scripts2.js"></script>
  -->
</body>
</html>
